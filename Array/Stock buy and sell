// Naive Solution

int maxProfit(int arr[],int start,int end)
{
if(start>=end) return 0;
int profit=0;
for(int i=start;i<end;i++)
{

for(int j=i+1;j<end;j++)
{
if(arr[i]<arr[j])
{
int currprofit=arr[j]-arr[i]+maxProfit(arr,start,i-1)+maxProfit(arr,j+1,end);
profit=max(profit,currprofit);

}
}
return profit;

return 0;
}


// Optimal Soln

int maxProfit(int arr[],int n)
{
int profit=0;
for(int i=1;i<n;i++)
{
if(price[i]>price[i-1])
{
price+=(arr[i]-arr[i-1]);
}
}
return profit;
}

}

}
